import pygame, sys

# I made this shit a class I think but you gotta tell me if I did it wrong. I decided upon making my own clock, one that did a countdown bar like you asked for I think? But tell me if you want to chang anything
class MoleClock:
    # this is just getting intilization in our shit so it wont break before we use it.
    def __init__(self):
        self.frame_duration = 0.000
        self.this_frame_time = 0
        self.last_frame_time = 0
        return
    
    def tick(self):
        #this is the "tick" so every frame it internally ticks n shit wouldnt change this part because its the framework of the tick, not the part can edit
        "Call this every frame"
        self.this_frame_time = self.get_current_time()
        self.frame_duration = (self.this_frame_time - self.last_frame_time) / 1000.000
        self.last_frame_time = self.this_frame_time
        return

    def get_frame_duration(self):
        # Need this to find the duration of previouis frame to generate next frame knowwhatIm Sayian
        "Returns the length of the previous frame, in seconds"
        return self.frame_duration

    def get_current_time(self):
        # This is cuz in mS its more accurate than in peasently seconds
        "Used internally. Returns current time in ms."
        return pygame.time.get_ticks()

    def begin(self):
        #important to start da shit but also can change if we changing the block
        "Starts/restarts the timer. Call just before your main loop."
        self.last_frame_time = self.get_current_time()
        return
        
if __name__ == "__main__":

    pygame.init()

    timer = MoleClock()

    timer.begin()

    # Object setup for the movement example cuz i like to move it move it you know? da 200 is da legth of the program n shit, and 20 is da hieght. Same height as da square so it dont look retarded.
    
    display = pygame.display.set_mode((200, 20), pygame.SWSURFACE)

    # I made it red cuz red is important and people look at red and go OSHIT
    red_square = pygame.Surface((20, 20), pygame.SWSURFACE)
    red_square.fill((255, 0, 0))

    # I made the background black cuz I tried white and it just looked like it was missing something idk
    black_square = pygame.Surface((20, 20), pygame.SWSURFACE)
    black_square.fill((0, 0, 0))

    # This is how fast box moves. Since game is 200 lengths wide and speed of 200 its every 1 second at this moment. You can change this with simple division but I wanted to make it small to fit in the side of the HUD in our game.
    square_speed = 200
    square_x = 0

    # Setup for interval delay and frequency. So the 1.00 means the internal time the clock takes to "tick" in our mole game we want to to be constent so i want to keep this at 1.000
    
    tick_interval = 1.000
    tick_time = 0

    # These are framerates. So 900 means box is updated every .9 seconds. Use a value like 5 if you want it to look like it moves consistently, and obviously higher is more choppy
    
    delay_duration = 5
    
    while 1:
        # Interval example
        
        tick_time += timer.get_frame_duration()
        if tick_time > tick_interval:
            tick_time = 0

        # Motion example
            
        display.blit(black_square, (square_x, 0))
        square_x += (square_speed * timer.get_frame_duration())
        if square_x > 320:
            square_x = 0
        display.blit(red_square, (square_x, 0))
        
        pygame.display.update()

        # Insert artificial delay
        
        pygame.time.delay(delay_duration)

        # Must call this every frame
        
        timer.tick()
